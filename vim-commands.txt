Basic Commands

    i: Insert mode at cursor position

    a: Insert mode after the cursor

    o: Insert mode with a new line below the cursor

    ESC: Return to normal mode

    :w: Save the file

    :q: Quit Vim

    :wq: Save and quit Vim

    :q!: Quit without saving

    dd: Delete the current line

    yy: Copy the current line

    p: Paste the copied line after the cursor

    u: Undo the last change

    Ctrl-r: Redo the last undo

    h, j, k, l: Move cursor left, down, up, right

Intermediate Commands

    x: Delete the character under the cursor

    dw: Delete from the cursor to the end of the word

    cw: Change the word from the cursor

    r: Replace the character under the cursor

    gg: Go to the beginning of the file

    G: Go to the end of the file

    /pattern: Search for a pattern

    n: Repeat the last search in the same direction

    N: Repeat the last search in the opposite direction

    :s/old/new/g: Replace all instances of 'old' with 'new' in the current line

    :%s/old/new/g: Replace all instances in the file

Advanced Commands

    v: Start visual mode (select text)

    V: Start visual line mode (select lines)

    Ctrl-v: Start visual block mode (select block of text)

    :sort: Sort selected lines in visual mode

    :!command: Execute external command

    :e filename: Open another file

    :tabnew filename: Open a new tab with a file

    gt: Go to the next tab

    gT: Go to the previous tab

    :split filename or :sp filename: Split the window horizontally

    :vsplit filename or :vsp filename: Split the window vertically

    Ctrl-w w: Switch between split windows

    Ctrl-w q: Quit a split window

    Ctrl-w o: Close all other split windows

    :help keyword: Open help for a specific keyword

Buffer Management

    :bnext or :bn: Go to the next buffer

    :bprev or :bp: Go to the previous buffer

    :bdelete or :bd: Delete a buffer

Macro Recording

    q{register}: Start recording a macro into register (like 'a')

    q: Stop recording the macro

    @a: Play the macro from register 'a'

    @@: Play the last played macro
